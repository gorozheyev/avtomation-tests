{"uuid":"a1e9e22f-bd8e-42ee-9294-58bd1a54a2ec","historyId":"d20095568860b54fba88dbae7ef5e980","fullName":"com.example.tests.SearchFilterTests.choiceModelWithoutMark","labels":[{"name":"package","value":"com.example.tests.SearchFilterTests"},{"name":"testClass","value":"com.example.tests.SearchFilterTests"},{"name":"testMethod","value":"choiceModelWithoutMark"},{"name":"parentSuite","value":"Suite"},{"name":"suite","value":"Parallel Tests"},{"name":"subSuite","value":"com.example.tests.SearchFilterTests"},{"name":"host","value":"GorozheevPC"},{"name":"thread","value":"8744@GorozheevPC.pool-1-thread-2(14)"}],"links":[],"name":"choiceModelWithoutMark","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"\nExpected: is \"rgba(64, 132, 245, 1)\"\n     but: was \"transparent\"","trace":"java.lang.AssertionError: \nExpected: is \"rgba(64, 132, 245, 1)\"\n     but: was \"transparent\"\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\r\n\tat com.example.tests.SearchFilterTests.choiceModelWithoutMark(SearchFilterTests.java:28)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:714)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"},"stage":"finished","start":1512661211316,"stop":1512661227943,"parameters":[]}